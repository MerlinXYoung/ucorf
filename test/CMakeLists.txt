project(test)
if (CMAKE_BUILD_TYPE)
else()
    set(CMAKE_BUILD_TYPE RELEASE)
endif()

message("CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")

set(CMAKE_CXX_FLAGS "-std=c++11 -g")
#set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 -O3 -pg")
add_executable(zk_server.t zk_server.cpp echo.rpc.cc echo.pb.cc)
add_executable(zk_client.t zk_client.cpp echo.rpc.cc echo.pb.cc)
add_executable(server.t server.cpp echo.rpc.cc echo.pb.cc)
add_executable(client.t client.cpp echo.rpc.cc echo.pb.cc)
add_executable(bmserver.t bmserver.cpp echo.rpc.cc echo.pb.cc)
add_executable(bmclient.t bmclient.cpp echo.rpc.cc echo.pb.cc)
add_executable(wnd_client.t wnd_client.cpp echo.rpc.cc echo.pb.cc)
set(LINK_ARGS "-lucorf -llibgonet -llibgo -lprotobuf -lboost_thread -lboost_system -lboost_coroutine -lboost_context -lboost_regex -lboost_thread -lzookeeper_mt -ldl -ltcmalloc_minimal -lpthread -static -static-libgcc -static-libstdc++")
target_link_libraries(zk_server.t ${LINK_ARGS})
target_link_libraries(zk_client.t ${LINK_ARGS})
target_link_libraries(server.t ${LINK_ARGS})
target_link_libraries(client.t ${LINK_ARGS})
target_link_libraries(bmserver.t ${LINK_ARGS})
target_link_libraries(bmclient.t ${LINK_ARGS})
target_link_libraries(wnd_client.t ${LINK_ARGS})
